# SKrulll Environment Configuration
# Copy this file to .env and fill in your actual values.
# DO NOT commit your actual .env file to version control.

# --- General Application Settings ---
FLASK_DEBUG=False
LOG_LEVEL=INFO
LOG_DIR=logs
SECRET_KEY=your_very_secret_flask_key_here_please_change_me
# For production, set PREFERRED_URL_SCHEME to https if behind a reverse proxy handling SSL
PREFERRED_URL_SCHEME=http

# --- Database Credentials ---
# PostgreSQL
# Option 1: Individual parameters
PGHOST=localhost
PGPORT=5432
PGUSER=postgres
PGPASSWORD=your_postgres_password
PGDATABASE=cyberops
# Option 2: Full DATABASE_URL (takes precedence if set and postgresql_client.py is adapted to prioritize it)
# DATABASE_URL=postgresql://postgres:your_postgres_password@localhost:5432/cyberops

# MongoDB
MONGODB_HOST=localhost
MONGODB_PORT=27017
MONGODB_USERNAME=admin
MONGODB_PASSWORD=your_mongodb_password
MONGODB_DATABASE=cyberops
# Or, full MONGODB_URI (takes precedence if set and mongodb_client.py is adapted)
# MONGODB_URI=mongodb://admin:your_mongodb_password@localhost:27017/cyberops?authSource=admin

# Elasticsearch
ELASTICSEARCH_HOST=localhost:9200
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=your_elasticsearch_password
# ELASTICSEARCH_USE_SSL=false
# ELASTICSEARCH_VERIFY_CERTS=true
# ELASTICSEARCH_API_KEY=your_elasticsearch_api_key # If using API key auth

# Neo4j
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your_neo4j_password

# --- Messaging System ---
MESSAGING_TYPE=rabbitmq # or kafka

# RabbitMQ (if MESSAGING_TYPE=rabbitmq)
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USERNAME=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/

# Kafka (if MESSAGING_TYPE=kafka)
# KAFKA_BOOTSTRAP_SERVERS=localhost:9092
# KAFKA_CLIENT_ID=skrulll

# --- External Service API Keys ---
SERPAPI_KEY=your_serpapi_key_for_search_footprint
TWITTER_CONSUMER_KEY=your_twitter_consumer_key
TWITTER_CONSUMER_SECRET=your_twitter_consumer_secret
TWITTER_ACCESS_TOKEN=your_twitter_access_token
TWITTER_ACCESS_TOKEN_SECRET=your_twitter_access_token_secret
REDDIT_CLIENT_ID=your_reddit_client_id
REDDIT_CLIENT_SECRET=your_reddit_client_secret
REDDIT_USER_AGENT="SKrulll OSINT Aggregator/1.0 (by /u/your_reddit_username)" # Customize user agent
PASTEBIN_API_KEY=your_pastebin_api_key_for_leak_detection

# --- Metasploit RPC (for Exploit Tester) ---
MSFRPC_HOST=localhost # Host where msfrpcd is running (often in the exploit-tester container)
MSFRPC_PORT=55553
MSFRPC_USERNAME=msf
MSFRPC_PASSWORD=msf_password_for_rpc

# --- OpenVAS (for Advanced Vulnerability Scanner) ---
OPENVAS_HOST=localhost # Host where OpenVAS (GMP) is running
OPENVAS_PORT=9390
OPENVAS_USERNAME=admin
OPENVAS_PASSWORD=openvas_password

# --- Docker specific paths (if different from defaults) ---
# WORDLIST_PATH=/app/wordlists/subdomains.txt # Example for domain_scanner Go module if run directly
# NUCLEI_TEMPLATES_PATH=/app/nuclei-templates # For vulnerability_scanner Nuclei module

# --- Redis (for Caching & Task Queue with Celery if used) ---
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB_CACHE=0 # For general application caching
REDIS_DB_CELERY=1 # For Celery broker/backend if Celery is used

# --- Memory Optimization ---
# These are usually calculated dynamically by optimization.py, but can be overridden for specific needs.
# RESERVE_MEMORY_PERCENTAGE=0.20
# NEO4J_MEMORY_PERCENTAGE=0.30
# ... etc. for other services

# --- Development & Testing ---
# For local exploit execution (use with extreme caution)
# ALLOW_LOCAL_EXPLOIT_EXECUTION=false
# BYPASS_EXPLOIT_SECURITY_CHECKS=false